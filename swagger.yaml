openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
  - url: https://udemytutorials.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterPOSTRequest"
                - example:
                    name: henry
                    email: henry@gmail.com
                    password: henrypass
            example:
              name: henry
              email: henry@gmail.com
              password: henrypass
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginPOSTRequest"
                - example:
                    email: evan@gmail.com
                    password: evanpass
            example:
              email: evan@gmail.com
              password: evanpass
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobPOSTRequest"
                - example:
                    company: Burger King
                    position: Royal Jester
            example:
              company: Burger King
              position: Royal Jester
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /user/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The user ID
    get:
      tags:
        - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobPATCHRequest"
                - example:
                    company: MgRonalds
                    position: Hamburglar
            example:
              company: MgRonalds
              position: Hamburglar
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    RegisterPOSTRequest:
      title: RegisterPOSTRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: henry
        email: henry@gmail.com
        password: henrypass
    LoginPOSTRequest:
      title: LoginPOSTRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: evan@gmail.com
        password: evanpass
    CreateJobPOSTRequest:
      title: CreateJobPOSTRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Burger King
        position: Royal Jester
    UpdateJobPATCHRequest:
      title: UpdateJobPATCHRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: MgRonalds
        position: Hamburglar
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
